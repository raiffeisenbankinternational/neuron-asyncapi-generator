import { File } from "@asyncapi/generator-react-sdk";
import ejs from "ejs";

const resource = `
# This file was generated by asyncapi-generator.
# Any changes will be overwritten.

apiVersion: neuron.isf/v1alpha1
kind: NeuronNamespace
metadata:
  name: <%= namespaceName %>
spec:
  neuronClusterName: "{{ .Values.neuron.clusterName }}"
  tenant: <%= tenantName %>
  namespace: <%= namespaceName %>
  {{- with (( index (.Values.neuron.namespaces | default dict) "<%= namespaceName %>" ).policies) }}
  policies:
    {{- toYaml . | nindent 4 }}
  {{- end }}
`;

export default function ({ asyncapi }) {
  const namespaces = fetchNamespaces(asyncapi._json.channels);

  return namespaces.map(({ namespace, tenant }) => {
    const filename = `${namespace}-namespace.yaml`;
    const env = {
      namespaceName: namespace,
      tenantName: tenant,
    };

    return <File name={filename}>{ejs.render(resource, env).trim()}</File>;
  });
}

function fetchNamespaces(channels) {
  const namespaces = new Set();

  for (const channel in channels) {
    if (typeof channel === "string") {
      const parts = channel.split("/");
      const tenant = parts[0];
      const namespace = parts[1];

      namespaces.add({ namespace, tenant });
    }
  }

  return [...namespaces];
}
