name: Release - if Node project

on:
  push:
    branches:
      - main
      - "**-release"

jobs:
  test:
    name: Test
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if Node.js project and has package.json
        id: packagejson
        run: test -e ./package.json && echo "::set-output name=exists::true" || echo "::set-output name=exists::false"
        shell: bash

      - if: steps.packagejson.outputs.exists == 'true'
        name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - if: steps.packagejson.outputs.exists == 'true'
        name: Install dependencies
        run: npm install

      - if: steps.packagejson.outputs.exists == 'true'
        name: Run test
        run: npm test

  release:
    needs: test
    name: Publish to GitHub
    runs-on: self-hosted
    steps:
      - name: Set git to use LF #to once and for all finish neverending fight between Unix and Windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if Node.js project and has package.json
        id: packagejson
        run: test -e ./package.json && echo "::set-output name=exists::true" || echo "::set-output name=exists::false"

      - if: steps.packagejson.outputs.exists == 'true'
        name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - if: steps.packagejson.outputs.exists == 'true'
        name: Install dependencies
        run: npm install

      - if: steps.packagejson.outputs.exists == 'true'
        name: Release to GitHub
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: cortex-bot
          GIT_AUTHOR_EMAIL: cortex@rbinternational.com
          GIT_COMMITTER_NAME: cortex-bot
          GIT_COMMITTER_EMAIL: cortex@rbinternational.com
        run: npm run release
